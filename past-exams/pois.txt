Εκφώνηση
Από την είσοδο διαβάζεται ένας αριθμός Ν και ακολούθως τα δεδομένα για Ν PoIs (σημεία ενδιαφέροντος - Points of Interest), αρχικά οι συντεταγμένες x, y και κατόπιν ο τίτλος της κατηγορίας, με τυχαία σειρά. Στη συνέχεια, διαβάζεται ένας αριθμός Κ και ένα ίχνος (track), δηλαδή μια διατεταγμένη ακολουθία Κ σημείων τα οποία διατρέχει κάποιος που κινείται στο χώρο.

Να κατασκευάσετε ένα πρόγραμμα το οποίο να υπολογίζει και εμφανίζει, για κάθε σημείο του ίχνους, το πλησιέστερο σημείο ενδιαφέροντος από κάθε κατηγορία. Στην έξοδο να εμφανίζονται οι συντεταγμένες του σημείου του ίχνους και στις επόμενες γραμμές η κατηγορία και η απόσταση του πλησιέστερου σημείου ενδιαφέροντος (PoI) για κάθε κατηγορία, με αλφαβητική ταξινόμηση ως προς την κατηγορία. Οι αποστάσεις θα πρέπει να εμφανίζονται με μορφοποίηση 3 δεκαδικών ψηφίων, ακριβώς όπως φαίνεται στο παράδειγμα που ακολουθεί.

H ζητούμενη μορφοποίηση απαιτεί τη βιβλιοθήκη <iomanip> και μπορεί να γίνει ως εξής:

double d = 1.41457246;
cout << fixed << setprecision(3) << d;
Προσοχή: Παρότι οι συντεταγμένες είναι ακέραιοι αριθμοί, ίσως θα θέλατε να τις μετατρέψετε σε double για να αποφύγετε σφάλματα υπερχείλισης στον υπολογισμό των αποστάσεων.

Περιορισμοί
1 <= N <= 1000
1 <= K <= 3000
1 <= x,y <= 5.000.000
Τα ονόματα των κατηγοριών έχουν το πολύ 20 χαρακτήρες
Όριο χρόνου εκτέλεσης: 1 sec.
Όριο μνήμης: 128 MB.
Παράδειγμα εισόδου
8
12479 41901 restaurant
12451 41898 supermarket
12479 41911 restaurant
12473 41891 supermarket
12485 41913 restaurant
12457 41907 gas-station
12482 41916 gas-station
12457 41902 supermarket
3
12459 41926
12462 41928
12460 41728
Παράδειγμα εξόδου
12459 41926
  gas-station 19.105
  restaurant 25.000
  supermarket 24.083
12462 41928
  gas-station 21.587
  restaurant 24.042
  supermarket 26.476
12460 41728
  gas-station 179.025
  restaurant 174.040
  supermarket 163.518
